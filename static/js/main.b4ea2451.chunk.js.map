{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","concat","then","response","json","Chart","_ref","coinId","_useQuery","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","exceptData","map","i","x","time_close","y","open","high","low","close","_jsx","children","ApexChart","Price","Title","styled","h1","_templateObject","_taggedTemplateLiteral","props","theme","accentColor","Loader","span","_templateObject2","Container","div","_templateObject3","Header","header","_templateObject4","Overview","_templateObject5","OverviewItem","_templateObject6","Description","p","_templateObject7","Tabs","_templateObject8","Tab","_templateObject9","isActive","textColor","Coin","_tickersData$quotes","_tickersData$quotes$U","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","_useQuery2","fetchCoinTickers","tickersLoading","tickersData","loading","_jsxs","HelmetProvider","Helmet","name","_Fragment","rank","symbol","quotes","USD","price","toFixed","description","total_supply","max_supply","Link","to","Switch","Route","path","CoinsList","ul","li","liBgColor","bgColor","titleColor","img","Coins","coinList","slice","coin","pathname","id","Router","BrowserRouter","exact","lightTheme","themeBg","darkTheme","GlobalStyle","createGlobalStyle","button","Toggle","Home","App","_useState","useState","_useState2","_slicedToArray","isDark","setIsDark","text","ThemeProvider","onClick","current","window","location","replace","ReactQueryDevtools","initialIsOpen","queryClient","QueryClient","ReactDOM","render","React","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.b4ea2451.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\nconst COIN_URL = `https://ohlcv-api.nomadcoders.workers.dev`;\n\nexport function fetchCoins() {\n  // return fetch(`${BASE_URL}`).then((response) => response.json());\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n  // return fetch(`${COIN_URL}/${coinId}`).then((response) => response.json());\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { useQuery } from \"@tanstack/react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  const exceptData = data ?? [];\n  const chartData = exceptData?.map((i) => {\n    return {\n      x: i.time_close,\n      y: [i.open, i.high, i.low, i.close],\n    };\n  });\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n        // type=\"candlestick\"\n        // series={[{ chartData }]}\n        // options={{\n        //   chart: {\n        //     type: \"candlestick\",\n        //     height: 350,\n        //   },\n        // }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","function Price() {\n  return <h1>Price</h1>;\n}\n\nexport default Price;\n","import { useQuery } from \"@tanstack/react-query\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <HelmetProvider>\n        <Helmet>\n          <title>\n            {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n          </title>\n        </Helmet>\n      </HelmetProvider>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes?.USD?.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.liBgColor};\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    color: ${(props) => props.theme.textColor};\n    font-weight: 600;\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  font-weight: 800;\n  color: ${(props) => props.theme.titleColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>([\"allCoins\"], fetchCoins);\n  const coinList = data?.slice(0, 10);\n\n  return (\n    <Container>\n      <HelmetProvider>\n        <Helmet>\n          <title>코인</title>\n        </Helmet>\n      </HelmetProvider>\n      <Header>\n        <Title>Coin World</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {coinList?.map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                {/* <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                /> */}\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route exact path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const lightTheme: DefaultTheme = {\n  textColor: \"#fdcb6e\",\n  bgColor: \"#ffeaa7\",\n  accentColor: \"#fd79a8\",\n  titleColor: \"#00b894\",\n  liBgColor: \"white\",\n  themeBg: \"gray\",\n};\n\nexport const darkTheme: DefaultTheme = {\n  textColor: \"#2d3436\",\n  bgColor: \"#636e72\",\n  accentColor: \"#d63031\",\n  titleColor: \"#00b894\",\n  liBgColor: \"#dfe6e9\",\n  themeBg: \"white\",\n};\n","import styled, { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"@tanstack/react-query-devtools\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useState } from \"react\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\nconst Header = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 0 20px 0 20px;\n  background-color: ${(props) => props.theme.bgColor};\n  border: none;\n`;\n\nconst Toggle = styled.button`\n  background-color: ${(props) => props.theme.themeBg};\n  color: #ffffff;\n  border: none;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n  margin: 10px;\n`;\n\nconst Home = styled.button`\n  background-color: tomato;\n  color: #ffffff;\n  border: none;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n  margin: 10px;\n`;\n\nfunction App() {\n  const [isDark, setIsDark] = useState<boolean>(false);\n  const changeTheme = () => setIsDark((current) => !current);\n  const text = isDark === true ? \"🌝\" : \"🌚\";\n  const goToHome = () => window.location.replace(\"/\");\n\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <Header>\n          <Toggle onClick={changeTheme}>{text}</Toggle>\n          <Home onClick={goToHome}>🏠</Home>\n        </Header>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
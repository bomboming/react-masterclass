{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","COIN_URL","fetchCoins","fetch","concat","then","response","json","Chart","_ref","coinId","_useQuery","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","_jsx","children","Price","Title","styled","h1","_templateObject","_taggedTemplateLiteral","props","theme","accentColor","Loader","span","_templateObject2","Container","div","_templateObject3","Header","header","_templateObject4","Overview","_templateObject5","OverviewItem","_templateObject6","Description","p","_templateObject7","Tabs","_templateObject8","Tab","_templateObject9","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","_useQuery2","fetchCoinTickers","tickersLoading","tickersData","loading","_jsxs","Helmet","name","_Fragment","rank","symbol","quotes","USD","price","toFixed","description","total_supply","max_supply","Link","to","Switch","Route","path","CoinsList","ul","li","bgColor","img","Coins","_data$slice","slice","map","coin","pathname","id","Router","BrowserRouter","GlobalStyle","createGlobalStyle","App","ReactQueryDevtools","initialIsOpen","queryClient","QueryClient","ReactDOM","render","React","StrictMode","QueryClientProvider","client","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.bec0fff7.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\nconst COIN_URL = `https://ohlcv-api.nomadcoders.workers.dev`;\n\nexport function fetchCoins() {\n  // return fetch(`${BASE_URL}`).then((response) => response.json());\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${COIN_URL}/${coinId}`).then((response) => response.json());\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <h1>나오나????</h1>\n        // <ApexChart\n        //   type=\"line\"\n        //   series={[\n        //     {\n        //       name: \"Price\",\n        //       data: data?.map((price) => price.close),\n        //     },\n        //   ]}\n        //   options={{\n        //     theme: {\n        //       mode: \"dark\",\n        //     },\n        //     chart: {\n        //       height: 300,\n        //       width: 500,\n        //       toolbar: {\n        //         show: false,\n        //       },\n        //       background: \"transparent\",\n        //     },\n        //     grid: { show: false },\n        //     stroke: {\n        //       curve: \"smooth\",\n        //       width: 4,\n        //     },\n        //     yaxis: {\n        //       show: false,\n        //     },\n        //     xaxis: {\n        //       axisBorder: { show: false },\n        //       axisTicks: { show: false },\n        //       labels: { show: false },\n        //       type: \"datetime\",\n        //       categories: data?.map((price) => price.time_close),\n        //     },\n        //     fill: {\n        //       type: \"gradient\",\n        //       gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n        //     },\n        //     colors: [\"#0fbcf9\"],\n        //     tooltip: {\n        //       y: {\n        //         formatter: (value) => `$${value.toFixed(2)}`,\n        //       },\n        //     },\n        //   }}\n        // />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","function Price() {\n  return <h1>Price</h1>;\n}\n\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100)?.map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                {/* <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                /> */}\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  textColor: \"#2f3640\",\n  bgColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n};\n\n// export const lightTheme: DefaultTheme = {\n//   textColor: \"black\",\n//   bgColor: \"white\",\n// };\n\n// export const darkTheme: DefaultTheme = {\n//   textColor: \"white\",\n//   bgColor: \"black\",\n// };\n"],"sourceRoot":""}